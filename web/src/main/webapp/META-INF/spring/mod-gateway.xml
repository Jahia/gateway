<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd">

    <lang:groovy id="articleDecoder"
                 script-source="classpath:org/jahia/modules/gateway/decoders/ArticleMailDecoderImpl.groovy">
        <lang:property name="paths">
            <map key-type="java.lang.String" value-type="java.lang.String">
                <!--<entry key="shared" value="/sites/systemsite/contents/articles"/>-->
            </map>
        </lang:property>
        <lang:property name="userManagerService" ref="JahiaUserManagerService"/>
    </lang:groovy>

    <bean id="mailtojson" class="org.jahia.modules.gateway.mail.MailToJSON">
        <property name="jcrTemplate" ref="jcrTemplate"/>
        <property name="userManagerService" ref="JahiaUserManagerService"/>
        <property name="regexps">
            <list value-type="java.lang.String">
                <value>create ([a-z]+):([a-zA-Z ]+) located in ([a-zA-Z/]*)</value>
            </list>
        </property>
        <property name="decoders">
            <map key-type="java.lang.String">
                <entry key="news">
                    <bean class="org.jahia.modules.gateway.decoders.NewsMailDecoderImpl">
                        <property name="paths">
                            <map key-type="java.lang.String" value-type="java.lang.String">
                                <!--<entry key="shared" value="/sites/systemsite/contents/news"/>-->
                            </map>
                        </property>
                        <property name="userManagerService" ref="JahiaUserManagerService"/>
                    </bean>
                </entry>
                <entry key="article" value-ref="articleDecoder"/>
            </map>
        </property>
    </bean>


    <bean id="gatewayService" class="org.jahia.modules.gateway.GatewayService">
        <property name="template" ref="jcrTemplate"/>
        <property name="deserializers">
            <map key-type="java.lang.String" value-type="org.jahia.modules.gateway.CamelHandler">
                <entry key="jsontojcr">
                    <bean class="org.jahia.modules.gateway.JSONToJCRDeserializer">
                        <property name="jcrTemplate" ref="jcrTemplate"/>
                        <property name="taggingService" ref="org.jahia.services.tags.TaggingService"/>
                    </bean>
                </entry>
            </map>

        </property>
        <property name="transformers">
            <map key-type="java.lang.String" value-type="org.jahia.modules.gateway.Transformer">
                <entry key="mailtojson" value-ref="mailtojson"/>
                <entry key="sqltojson">
                    <bean class="org.jahia.modules.gateway.jdbc.SQLToJSONHandler"/>
                </entry>
            </map>
        </property>
        <property name="routeStartPoints">
            <map key-type="java.lang.String" value-type="org.jahia.modules.gateway.CamelStartPoint">
                <!--<entry key="default"
                       value="imaps://imap.gmail.com?username=yourusername@gmail.com&amp;password=yourpassword&amp;consumer.delay=30000"/>-->
            </map>
        </property>
        <property name="routes">
            <map key-type="java.lang.String" value-type="java.lang.String">
                <!--<entry key="default" value="default->mailtojson->jsontojcr"/>-->
            </map>
        </property>
        <property name="camelStartPointFactory">
            <bean class="org.jahia.modules.gateway.CamelStartPointFactory">
                <property name="startPointsClasses">
                    <map key-type="java.lang.String" value-type="java.lang.String">
                        <entry key="jnt:gmailstartpoint"
                               value="org.jahia.modules.gateway.admin.forms.GoogleMailStartPointFormHandlerImpl"/>
                        <entry key="jnt:sqlstartpoint"
                               value="org.jahia.modules.gateway.jdbc.SQLStartpoint"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!--Jahia Administration Module-->
    <bean id="gatewayAdministrationModule" class="org.jahia.modules.gateway.admin.GatewayAdministrationModule"
          parent="abstractAdministrationModule">
        <property name="serverModule" value="true"/>
        <property name="urlKey" value="gateway"/>
        <property name="permissionName" value="admin/gateway"/>
        <property name="name" value="gateway"/>
        <property name="icon" value="icons/gateway.png"/>
        <property name="iconSmall" value="icons/gateway_small.png"/>
        <property name="label" value="label.gateway"/>
        <property name="tooltip" value=""/>
        <property name="urlType" value="module"/>
        <property name="urlAction" value="gateway"/>
        <property name="urlParams" value=""/>
        <property name="gatewayService" ref="gatewayService"/>
        <property name="templateManagerService" ref="JahiaTemplateManagerService"/>
        <property name="startPointFormHandlers">
            <map key-type="java.lang.String" value-type="org.jahia.modules.gateway.admin.forms.StartPointFormHandler">
                <entry key="googlemail">
                    <!--key will be used to define the jsp file associated with this form here we will look for a form name googlemail.form.jsp-->
                    <bean class="org.jahia.modules.gateway.admin.forms.GoogleMailStartPointFormHandlerImpl">
                        <property name="template" ref="jcrTemplate"/>
                    </bean>
                </entry>
                <entry key="sql">
                    <bean class="org.jahia.modules.gateway.jdbc.SQLStartpoint">
                        <property name="template" ref="jcrTemplate"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
</beans>